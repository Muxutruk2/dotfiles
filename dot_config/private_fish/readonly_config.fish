# ~/.config/fish/config.fish: DO NOT EDIT -- this file has been generated
# automatically by home-manager.

# Only execute this file once per shell.
set -q __fish_home_manager_config_sourced; and exit
set -g __fish_home_manager_config_sourced 1

source /nix/store/1dgfsaa407jbsf8jk8jzs37wv8ms8d7c-hm-session-vars.fish

set -e __fish_home_manager_config_sourced

status is-login; and begin

    # Login shell initialisation

end

status is-interactive; and begin

    # Abbreviations

    # Aliases
    alias ls 'eza --icons --color'

    # Interactive shell initialisation
    set -e __fish_home_manager_config_sourced

    set -q __fish_config_sourced; and exit
    set -g __fish_config_sourced 1

    source ~/.config/fish/config.fish

    set -g fish_greeting ""

    function source_if_exists
        if test -f $argv[1]
            source $argv[1]
        end
    end

    # if is_no_de
    #     function fish_prompt
    #         set_color green
    #         printf "%s@%s %s ~> " (whoami) (hostname) (pwd)
    #         set_color normal
    #     end
    # end

    # tide configure --auto --style=Lean --prompt_colors='True color' --show_time=No --lean_prompt_height='One line' --prompt_spacing=Compact --icons='Few icons' --transient=Yes

    select_editor hx nvim vim

    # XDG config
    set -x XDG_CONFIG_HOME "$HOME/.config"
    set -x XDG_CACHE_HOME "$HOME/.cache"
    set -x XDG_DATA_HOME "$HOME/.local/share"
    set -x XDG_STATE_HOME "$HOME/.local/state"
    set -x XDG_DESKTOP_DIR "$HOME/Desktop"
    set -x XDG_DOCUMENTS_DIR "$HOME/Documents"
    set -x XDG_DOWNLOAD_DIR "$HOME/Downloads"
    set -x XDG_MUSIC_DIR "$HOME/Music"
    set -x XDG_PICTURES_DIR "$HOME/Pictures"
    set -x XDG_PUBLICSHARE_DIR "$HOME/Public"
    set -x XDG_TEMPLATES_DIR "$HOME/Templates"
    set -x XDG_VIDEOS_DIR "$HOME/Videos"

    # QT Config
    set -x QT_QPA_PLATFORMTHEME qt5ct

    set -x GTK_THEME "catppuccin-mocha-sapphire-standard+default"

    if set -q TMUX
        set -xg TERM screen-256color
    end

    silent_add_path "$HOME/.cargo/bin" "$HOME/.local/bin" "$HOME/.config/emacs/bin"
    if_command_run pyenv 'pyenv init - | source'
    if_command_run starship 'starship init fish | source'
    if_command_run fish_hybrid_key_bindings fish_hybrid_key_bindings
    source_if_exists "$HOME/.cargo/env.fish"
    git_clone_if_not_exists "$HOME/.tmux/plugins/tpm" "https://github.com/tmux-plugins/tpm"

    functions --erase fish_vi_cursor

    function fish_vi_cursor
        # No-op override to suppress cursor shape changes
    end

    if command_exists eza
        and not is_no_de
        alias ls='eza --icons --color=always'
        alias lls='ls --color=always'
    end

    if command_exists bat
        and status is-interactive
        and not is_no_de
        alias cat='bat'
        alias ccat='command cat'
        set -x MANPAGER "sh -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'"
    end

    if command_exists git
        abbr --add gs 'git status'
        abbr --add gl 'git log --oneline --graph --decorate'
        abbr --add gc 'git commit -m'
        abbr --add ga 'git add .'
        abbr --add gd 'git diff'
        abbr --add gds 'git diff --cached'
        abbr --add gco 'git checkout'
        abbr --add gcb 'git checkout -b'
        abbr --add gp 'git pull'
        abbr --add gps 'git push'
        abbr --add gr 'git reset --hard'
        abbr --add gla 'git log --oneline --graph --decorate --all'
        abbr --add gst 'git stash'
        abbr --add gsa 'git stash apply'
        abbr --add gb 'git branch'
        abbr --add grm 'git remote -v'
        abbr --add gclean 'git clean -fd'
        abbr --add gpl 'git pull --rebase'
        abbr --add gpr 'git pull --rebase origin master'
        abbr --add gch 'git checkout'
    else
        echo "Git not found, skipping Git aliases and abbreviations."
    end
    if command_exists htop and status is-interactive
        alias top='htop'
    end

    alias grep='grep -i --color=auto'
    alias df='df -h'
    alias du='du -h'

    function __fish_command_not_found_handler --on-event fish_command_not_found
        /nix/store/ih6zqnaj4wyxar6ywi32c5drizqcd3nk-command-not-found $argv
    end

    # add completions generated by Home Manager to $fish_complete_path
    begin
        set -l joined (string join " " $fish_complete_path)
        set -l prev_joined (string replace --regex "[^\s]*generated_completions.*" "" $joined)
        set -l post_joined (string replace $prev_joined "" $joined)
        set -l prev (string split " " (string trim $prev_joined))
        set -l post (string split " " (string trim $post_joined))
        set fish_complete_path $prev "/home/muxutruk/.local/share/fish/home-manager_generated_completions" $post
    end

end
